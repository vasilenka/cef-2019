{"version":3,"sources":["webpack:///./src/components/images/poster.js"],"names":["Image","props","normalizedProps","fluid","presentationWidth","Object","assign","style","maxWidth","margin","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","data","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","placeholderImage","childImageSharp","_public_static_d_401660410_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"8vDA+CeA,UAhCD,SAACC,GAEb,IAAIC,EAAkBD,EAYtB,OAXIA,EAAME,OAASF,EAAME,MAAMC,oBAC7BF,EAAeG,OAAAC,OAAA,GACVL,EADU,CAEbM,MAAKF,OAAAC,OAAA,GACCL,EAAMM,OAAS,GADhB,CAEHC,SAAUP,EAAME,MAAMC,kBACtBK,OAAQ,cAMZC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAK,YAYLC,OAAQ,SAAAC,GAAI,OAAIN,EAAAC,EAAAC,cAACK,EAAAN,EAADN,OAAAC,OAAA,GAASJ,EAAT,CAA0BC,MAAOa,EAAKE,iBAAiBC,gBAAgBhB,UAbzFa,KAAAI","file":"15-d0dd67cc5c18864fd18a.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = (props) => {\n\n  let normalizedProps = props\n  if (props.fluid && props.fluid.presentationWidth) {\n    normalizedProps = {\n      ...props,\n      style: {\n        ...(props.style || {}),\n        maxWidth: props.fluid.presentationWidth,\n        margin: \"0 auto\",\n      },\n    }\n  }\n\n  return(\n    <StaticQuery\n      query={graphql`\n        query {\n          placeholderImage: file(relativePath: { eq: \"poster.jpg\" }) {\n            childImageSharp {\n              fluid(maxWidth: 300, quality: 100) {\n                ...GatsbyImageSharpFluid,\n                presentationWidth\n              }\n            }\n          }\n        }\n      `}\n      render={data => <Img {...normalizedProps} fluid={data.placeholderImage.childImageSharp.fluid} />}\n    />\n  )\n}\nexport default Image\n"],"sourceRoot":""}